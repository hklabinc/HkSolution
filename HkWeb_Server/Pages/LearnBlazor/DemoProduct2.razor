@page "/learnBlazor/demoproduct2"

<h2 class="text-primary">Demo Product2</h2>

<p>Favorites Total: @SelectedFavoriteCount</p>

<p>Last Selected Product: @SelectedProduct</p>

<div class="border p-2 mt-2" style="background-color:azure">
    <div class="row">
        @foreach (var prod in Products)
        {
            <_DemoProduct2Component Product="@prod" OnFavoriteUpdated="FavoriteCountUpdate" OnProductSelected="SelectedProductUpdate">    @*자식 컴포넌트 (_DemoProduct2Component)에게 Product와 OnFavoriteUpdated를 통해서 값과 콜백함수를 넘겨줌*@
                <FirstFragment>#1</FirstFragment>
                <SecondFragment>#2</SecondFragment>
            </_DemoProduct2Component>
        }
    </div>
</div>


@code {
    private int SelectedFavoriteCount { get; set; } = 0;    // 위에서 count 값을 조작하기 위해 정의한 private 변수    
    protected void FavoriteCountUpdate(bool isSelected)     // 자식 컴포넌트로 부터 값을 받아서 실행되는 콜백 함수 정의 
    {
        if (isSelected)
        {
            SelectedFavoriteCount++;
        }
        else
        {
            SelectedFavoriteCount--;
        }
    }


    private string SelectedProduct { get; set; } = "";
    protected void SelectedProductUpdate(string productName)     // 자식 컴포넌트로 부터 값을 받아서 실행되는 콜백 함수 정의 
    {
       SelectedProduct = productName;
    }
    


    private string selectedProp = "";

    Demo_Product Product = new()
        {
            Id = 1,
            Name = "Rose Candle",
            IsActive = true,
            Price = 10.99,
            ProductProperties = new List<Demo_ProductProp>()
            {
                new Demo_ProductProp { Id=1, Key="Color", Value="Black"},
                new Demo_ProductProp { Id=2, Key="Flavor", Value="Rose Jasmine"},
                new Demo_ProductProp { Id=3, Key="Size", Value="20oz"},
            }
        };


    List<Demo_Product> Products = new();

    protected override void OnInitialized()     // 시작시 실행
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,

                Price = 10.99,
                ProductProperties = new()
                {
                    new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose" },
                    new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz" },
                    new Demo_ProductProp { Id = 3, Key = "Color", Value = "Purple" }
                }
            });

        Products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price = 13.99,
                ProductProperties = new()
                {
                    new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                    new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                    new Demo_ProductProp { Id = 3, Key = "Color", Value = "White" }
                }
            });
    }
}
